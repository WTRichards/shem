title = "SHeM Ray Tracing Library Example Configuration"
description = "An example configuration file which showcases the capabilities of the library. See comments for more information."
# These settings are the best for me on my setup. You will probably need to tweak them.
npixels = 512
# How many rays to be traced in parallel for each pixel. Lower this if Python screams about memory requirements. I have it at 17 because it is the largest amount I can squeeze into my GPU's memory
nparallel = 1
# How many segments to split the simulation into on the GPU. Raise this if Python screams about memory requirements.
blocks = 32
# How many times to repeat the same ray-tracing simulation
passes = 512

[scattering]
n = 5

# Specular reflection is not necessarily perfect.
# In this case it is modelled as a cone.
[scattering.specular]
strength = 50.0
width    = 0.05
# Diffuse scattering is comple
[scattering.diffuse]
strength = 50.0

[scan]
x_axis = 'x'
y_axis = 'y'
x_shift = 0.00
y_shift = 0.00
z_shift = 0.00

[scan.x]
range = 0.6
[scan.y]
range = 0.6
[scan.theta]
range = 0.0
[scan.phi]
range = 0.0

# Information lost due to thermal expansion. Cyclinder -> Cone
# Adiabatic expansion - calculate analytically.
# Angle is negligibly small.
# Lost information about incoming wavevector.
# Justify point source physically
[source]
radius   = 0.1
location = [1.0, 180.0, 45.0]
polar = true

[source.function.delta]
strength    = 10
[source.function.uniform_cone]
strength    = 90
delta_theta = 0.05
delta_phi   = 0.05


# Can define multiple detectors
[detector]

[detector.m4r]
radius   = 0.0001
location = [1.0, 0.0, 45.0]
polar    = true

[detector.m3r]
radius   = 0.001
location = [1.0, 0.0, 45.0]
polar    = true

[detector.m2r]
radius   = 0.01
location = [1.0, 0.0, 45.0]
polar    = true

[detector.m1r]
radius   = 0.1
location = [1.0, 0.0, 45.0]
polar    = true

[detector.0r]
radius   = 1.0
location = [1.0, 0.0, 45.0]
polar    = true

